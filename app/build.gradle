apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.tce.teacherapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }

        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'

    // orchestrator
    def orchestrator_version = "1.2.0"
    androidTestUtil "androidx.test:orchestrator:$orchestrator_version"

    // Kotlin test
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // Espresso
    def androidx_espresso_core = "3.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_core"

    def androidx_espresso_idling_resource = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"

    // Mockk.io
    def mockk_version = "1.9.2"
    //def mockk_version = "1.9.3" // had issues with this
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // androidx.test
    def androidx_test_runner = "1.2.0"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner"

    def androidx_test_core = "1.2.0"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core"


    def androidx_test_ext = "1.1.1"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext"

    // androidx.fragment
    def fragment_version = "1.2.4"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"


    // Mockito
    def mockito_core = "2.25.0"
    androidTestImplementation "org.mockito:mockito-core:$mockito_core"
    def mockito_android = "2.25.0"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android"

    // -- Retrofit2
    def retrofit2_version = '2.8.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    // -- Lifecycle Components (ViewModel, LiveData and ReactiveStreams)
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // -- Coroutines
    def coroutines_version = "1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // LiveData Coroutines
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"


    // -- Room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    def dagger_version = '2.27'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"


    // jetpack navigation components
    def nav_version = "2.3.0-beta01"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"


    def material_version = "1.1.0"
    implementation "com.google.android.material:material:$material_version"

    // material dialogs
    def matieral_dialogs_version = "3.1.0"
    implementation "com.afollestad.material-dialogs:core:$matieral_dialogs_version"

    // Card View
    def cardview_version = "1.0.0"
    implementation "androidx.cardview:cardview:$cardview_version"

    // Recyclerview

    def recyclerview_version = "1.1.0"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

//    //glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    api 'jp.wasabeef:glide-transformations:4.0.0'

    // Android-Image-Cropper
    def android_image_cropper_version = "2.8.0"
    api "com.theartofdev.edmodo:android-image-cropper:$android_image_cropper_version"

    //Airbnb Epoxy
    def epoxyVersion = '3.9.0'
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-glide-preloading:$epoxyVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    implementation "com.github.devlight.shadowlayout:library:1.0.2"
    implementation 'org.jetbrains.anko:anko-sqlite:0.10.2'


    def biometric_version = '1.0.0'
    implementation "androidx.biometric:biometric:$biometric_version"

    api 'id.zelory:compressor:1.0.4'
    api 'com.yalantis:ucrop:2.2.0'
}
